{
  "swagger": "2.0",
  "info": {
    "description": "Request as a Service",
    "version": "4.0",
    "title": "Concur Request API Documentation"
  },
  "host": "us.api.concursolutions.com",
  "basePath": "/travelrequest/v4",
  "tags": [
    {
      "name": "Request Resource",
      "description": "Represents the starting point of pre-spend authorizations within Concur Request"
    },
    {
      "name": "Workflow Resource",
      "description": "Manage workflow transitions for a Request"
    },
    {
      "name": "Travel Agency Resource",
      "description": "Get details of Travel Agencies integrated with Concur Request"
    },
    {
      "name": "Policy Resource",
      "description": "Get available Request Policies"
    },
    {
      "name": "Expected Expense Resource",
      "description": "Manage expected expenses attached to a Request"
    }
  ],
  "paths": {
    "/requests": {
      "get": {
        "tags": [
          "Request Resource"
        ],
        "summary": "Get the list of existing Requests",
        "operationId": "getListUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "Name of the perimeter defining the Requests to get",
            "required": false,
            "type": "string",
            "default": "ALL",
            "enum": [
              "ALL",
              "ACTIVE",
              "UNSUBMITTED",
              "PENDING",
              "VALIDATED",
              "APPROVED",
              "CANCELED",
              "CLOSED",
              "SUBMITTED",
              "TOAPPROVE",
              "PENDINGPROPOSAL",
              "PROPOSALAPPROVED",
              "PROPOSALCANCELED",
              "PENDINGEBOOKING"
            ]
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination : number of records per page",
            "required": false,
            "type": "string",
            "default": "10"
          },
          {
            "name": "start",
            "in": "query",
            "description": "Pagination : index of the first record",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Lower bound of modification date. Format: yyyy-MM-ddTHH:mm:ss.SSSZ or yyyy-MM-dd",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modifiedBefore",
            "in": "query",
            "description": "Upper bound of modification date. Format: yyyy-MM-ddTHH:mm:ss.SSSZ or yyyy-MM-dd",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "The name of the field on which to sort",
            "required": false,
            "type": "string",
            "default": "startDate",
            "enum": [
              "startDate",
              "approvalStatus",
              "requestId"
            ]
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order (ASC or DESC)",
            "required": false,
            "type": "string",
            "default": "DESC",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageResultOfResourceOfRequest"
            }
          },
          "400": {
            "description": "Bad param(s) : the request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Invalid or non existent authorization HTTP header",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Permission Denied",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "408": {
            "description": "Time out",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Request Resource"
        ],
        "summary": "Create a new Request",
        "operationId": "createUsingPOST_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          "400": {
            "description": "Invalid request body",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Invalid or non existent authorization HTTP header",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Permission Denied",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "408": {
            "description": "Time out",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/requests/{requestUuid}": {
      "get": {
        "tags": [
          "Request Resource"
        ],
        "summary": "Get the content of an existing Request",
        "operationId": "getUsingGET_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requestUuid",
            "in": "path",
            "description": "The unique identifier of the Request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          "400": {
            "description": "Bad param: invalid Guid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Invalid or non existent authorization HTTP header",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Permission Denied",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "408": {
            "description": "Time out",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Request Resource"
        ],
        "summary": "Update the content of an existing Request",
        "operationId": "updateUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requestUuid",
            "in": "path",
            "description": "The unique identifier of the Request",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          "400": {
            "description": "Bad param(s) : the request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Invalid or non existent authorization HTTP header",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Permission Denied",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "408": {
            "description": "Time out",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Request Resource"
        ],
        "summary": "Delete an existing Request",
        "operationId": "deleteUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "requestUuid",
            "in": "path",
            "description": "The unique identifier of the Request",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad param: invalid Guid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Invalid or non existent authorization HTTP header",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Permission Denied",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "408": {
            "description": "Time out",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/requests/{requestUuid}/comments": {
      "get": {
        "tags": [
          "Request Resource"
        ],
        "summary": "Get the list of comments for an existing Request",
        "operationId": "getCommentsByRequestUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requestUuid",
            "in": "path",
            "description": "The unique identifier of the Request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "400": {
            "description": "Bad param: invalid Guid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Invalid or non existent authorization HTTP header",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Permission Denied",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "408": {
            "description": "Time out",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/requests/{requestUuid}/reports": {
      "post": {
        "tags": [
          "Request Resource"
        ],
        "summary": "Create an Expense Report linked to an approved Request",
        "operationId": "createReportFromRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requestUuid",
            "in": "path",
            "description": "The unique identifier of the Request",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResourceLink"
            }
          },
          "400": {
            "description": "Bad param: invalid Guid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Invalid or non existent authorization HTTP header",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Permission Denied",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "408": {
            "description": "Time out",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/requests/{requestUuid}/{action}": {
      "post": {
        "tags": [
          "Workflow Resource"
        ],
        "summary": "Move an existing Request in the approval workflow",
        "operationId": "workflowActionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requestUuid",
            "in": "path",
            "description": "The unique identifier of the Request",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "path",
            "description": "The workflow state transition to be executed",
            "required": true,
            "type": "string",
            "enum": [
              "submit",
              "approve",
              "recall",
              "sendback",
              "cancel",
              "close",
              "reopen"
            ]
          },
          {
            "in": "body",
            "name": "comment",
            "description": "Only usable when the workflow action is set to ‘sendback’.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WorkflowAction"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "The unique identifier of the company",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user performing the status transition",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "You do not have permission to perform this operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/requests/{requestUuid}/expenses": {
      "get": {
        "tags": [
          "Expected Expense Resource"
        ],
        "summary": "Get the list of expected expenses attached to a Request",
        "operationId": "listUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requestUuid",
            "in": "path",
            "description": "The unique identifier of the Request",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user viewing the expected expenses attached to a Request",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Expense"
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "You do not have permission to perform this operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Expected Expense Resource"
        ],
        "summary": "Create a new expected expense",
        "operationId": "createUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requestUuid",
            "in": "path",
            "description": "The unique identifier of the Request to which the expected expense is attached",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "expense",
            "description": "expense",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Expense"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user performing the expected expense creation",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Expense"
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "You do not have permission to perform this operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/expenses/{expenseUuid}": {
      "get": {
        "tags": [
          "Expected Expense Resource"
        ],
        "summary": "Get an existing expected expense",
        "operationId": "getUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expenseUuid",
            "in": "path",
            "description": "The unique identifier of the expected expense",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user viewing the expected expense",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Expense"
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "You do not have permission to perform this operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Expected Expense Resource"
        ],
        "summary": "Update the content of an existing expected expense",
        "operationId": "updateUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expenseUuid",
            "in": "path",
            "description": "The unique identifier of the expected expense",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "expense",
            "description": "expense",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Expense"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user performing the expected expense update",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Expense"
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "You do not have permission to perform this operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Expected Expense Resource"
        ],
        "summary": "Delete an expected expense from the Request",
        "operationId": "deleteUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "expenseUuid",
            "in": "path",
            "description": "The unique identifier of the expected expense",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user performing the deletion of the expected expense",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "You do not have permission to perform this operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/expenses/{expenseUuid}/comments": {
      "get": {
        "tags": [
          "Expected Expense Resource"
        ],
        "summary": "Get the list of comments for an existing expected expense",
        "operationId": "getCommentsByExpenseUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expenseUuid",
            "in": "path",
            "description": "The unique identifier of the expected expense",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "You do not have permission to perform this operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/userpolicies": {
      "get": {
        "tags": [
          "Policy Resource"
        ],
        "summary": "Get the list of existing Request Policies for a given user",
        "operationId": "getListForUserUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user for whom the list of Request Policies will be retrieved",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceOfPolicy"
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "You do not have permission to perform this operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/travelagencies/{agencyUuid}": {
      "get": {
        "tags": [
          "Travel Agency Resource"
        ],
        "summary": "Get the description of a Travel Agency office",
        "operationId": "getUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "agencyUuid",
            "in": "path",
            "description": "The unique identifier of the Travel Agency",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceOfTravelAgency"
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "You do not have permission to perform this operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Allocation": {
      "type": "object",
      "properties": {
        "allocationAmount": {
          "description": "The amount of the allocation calculated with the percentage value multiplied by the transaction amount on the expense. This amount is given in the transaction's currency",
          "$ref": "#/definitions/Amount"
        },
        "allocationId": {
          "type": "string",
          "description": "The unique allocation identifier."
        },
        "approvedAmount": {
          "description": "The amount of the allocation calculated with the percentage value multiplied by the approved amount on the expense. This amount is given in the user's currency",
          "$ref": "#/definitions/Amount"
        },
        "custom1": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom10": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom11": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom12": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom13": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom14": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom15": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom16": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom17": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom18": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom19": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom2": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom20": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom3": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom4": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom5": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom6": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom7": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom8": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom9": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "expenseId": {
          "type": "string",
          "description": "The unique identifier of the expense associated with the allocation"
        },
        "percentEdited": {
          "type": "boolean",
          "example": false,
          "description": "Whether the allocation percent has been edited"
        },
        "percentage": {
          "type": "number",
          "description": "The percentage of the total expense that this allocation represents"
        },
        "postedAmount": {
          "description": "The amount of the allocation calculated with the percentage value multiplied by the posted amount on the expense. This amount is given in the user's currency",
          "$ref": "#/definitions/Amount"
        },
        "systemAllocation": {
          "type": "boolean",
          "example": false,
          "description": "Whether the allocation is a system allocation. It is usually hidden or read only for Request users"
        }
      }
    },
    "Amount": {
      "type": "object",
      "required": [
        "currency",
        "value"
      ],
      "properties": {
        "currency": {
          "type": "string",
          "description": "The 3-letter ISO 4217 code of the currency in which the amount is expressed",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "value": {
          "type": "number",
          "description": "The amount in the defined currency",
          "minimum": 1,
          "maximum": 2147483647
        }
      }
    },
    "ApprovalStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code of the approval status of the Request",
          "minLength": 1,
          "maxLength": 2147483647,
          "enum": [
            "APPROVED",
            "CANCELED",
            "NOT_SUBMITTED",
            "PENDING_BOOKING",
            "SENTBACK",
            "SUBMITTED"
          ]
        },
        "name": {
          "type": "string",
          "description": "The approval status of the Request in the current user's language",
          "minLength": 1,
          "maxLength": 2147483647
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "author": {
          "description": "Author of the comment",
          "$ref": "#/definitions/Employee"
        },
        "creationDateTime": {
          "type": "string",
          "description": "Creation date of the comment (in the format YYYY-MM-DD HH:mm:ss.SSS)"
        },
        "isLatest": {
          "type": "boolean",
          "example": false,
          "description": "Is set to true if the comment was edited after the last workflow transition"
        },
        "value": {
          "type": "string",
          "description": "Comment value"
        }
      }
    },
    "CustomField": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The short code of the list item. For non-list fields, this value will be blank"
        },
        "href": {
          "type": "string",
          "description": "The HATEOAS link to get this list item in case of a list. This value will be blank otherwise."
        },
        "value": {
          "type": "string",
          "description": "The value of the custom field or the value of the list item id for list fields"
        }
      }
    },
    "Employee": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "The first name of the employee"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastName": {
          "type": "string",
          "description": "The last name of the employee"
        },
        "template": {
          "type": "string"
        }
      }
    },
    "Expense": {
      "type": "object",
      "required": [
        "transactionDate"
      ],
      "properties": {
        "allocations": {
          "type": "array",
          "description": "List of the allocations composing this segment",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        },
        "approvedAmount": {
          "description": "The approved amount of the expected expense",
          "$ref": "#/definitions/Amount"
        },
        "budgetAccrualDate": {
          "type": "string",
          "description": "The date to determine which budgets are affected (in the format yyyy-MM-dd’T’HH:mm:ss.SSS’Z’)",
          "example": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        },
        "businessPurpose": {
          "type": "string",
          "description": "The purpose of the Expected Expense"
        },
        "comments": {
          "description": "Comment history of the Expected Expense",
          "$ref": "#/definitions/ResourceLink"
        },
        "custom1": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom10": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom11": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom12": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom13": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom14": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom15": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom16": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom17": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom18": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom19": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom2": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom20": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom21": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom22": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom23": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom24": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom25": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom26": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom27": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom28": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom29": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom3": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom30": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom31": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom32": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom33": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom34": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom35": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom36": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom37": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom38": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom39": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom4": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom40": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom5": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom6": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom7": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom8": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom9": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "exchangeRate": {
          "description": "The exchange rate that applies to the Expected Expense",
          "$ref": "#/definitions/ExchangeRate"
        },
        "expenseType": {
          "description": "The expense type of the Expected Expense",
          "$ref": "#/definitions/ExpenseType"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the Expected Expense"
        },
        "lastComment": {
          "type": "string",
          "description": "The last comment of the Expected Expense"
        },
        "lastModifiedDate": {
          "type": "string",
          "description": "The date when this expense was last modified"
        },
        "location": {
          "description": "The location of the Expected Expense",
          "$ref": "#/definitions/Location"
        },
        "orgUnit1": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit2": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit3": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit4": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit5": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit6": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "postedAmount": {
          "description": "The posted amount of the Expected Expense",
          "$ref": "#/definitions/Amount"
        },
        "remainingAmount": {
          "description": "The remaining amount of the Expected Expense",
          "$ref": "#/definitions/Amount"
        },
        "source": {
          "type": "string",
          "description": "The source that created the Expected Expense. It can be CASH_ADVANCE or TRAVEL_ALLOWANCE. This field will be empty in any other case.",
          "enum": [
            "CASH_ADVANCE",
            "TRAVEL_ALLOWANCE",
            "AGENCY_FEE"
          ]
        },
        "transactionAmount": {
          "description": "The amount of the Expected Expense, in the transaction currency paid to the vendor",
          "$ref": "#/definitions/Amount"
        },
        "transactionDate": {
          "type": "string",
          "description": "The date of the transaction"
        },
        "travelAllowance": {
          "description": "The travel allowance",
          "$ref": "#/definitions/TravelAllowance"
        },
        "tripData": {
          "description": "This property is non empty if this Expected Expense represents a travel Segment (AIR, CAR, HOTEL, ...)",
          "$ref": "#/definitions/TripData"
        },
        "vendor": {
          "description": "The vendor of the Expected Expense",
          "$ref": "#/definitions/Vendor"
        }
      }
    },
    "ExchangeRate": {
      "type": "object",
      "required": [
        "operation",
        "value"
      ],
      "properties": {
        "operation": {
          "type": "string",
          "description": "Exchange rate operation. Possible values: 'MULTIPLY' or 'DIVIDE'",
          "enum": [
            "MULTIPLY",
            "DIVIDE"
          ]
        },
        "value": {
          "type": "number",
          "description": "Exchange rate value"
        }
      }
    },
    "ExpenseType": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "href": {
          "type": "string",
          "description": "Hyperlink to the resource for the expense type definition"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the expense type"
        },
        "name": {
          "type": "string",
          "description": "Name of the expense type"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "exception": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Link": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "Hyperlink to the resource."
        },
        "rel": {
          "type": "string",
          "description": "Relation type as defined by the server."
        }
      }
    },
    "ListItemField": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The short code of the list item."
        },
        "href": {
          "type": "string",
          "description": "Hyperlink to the resource for the list item."
        },
        "value": {
          "type": "string",
          "description": "The value of the list item id."
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "airportName": {
          "type": "string",
          "description": "The airport name of the location"
        },
        "city": {
          "type": "string",
          "description": "The city of the location"
        },
        "countryCode": {
          "type": "string",
          "description": "The code of the country"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "description": "The country sub code"
        },
        "iataCode": {
          "type": "string",
          "description": "The IATA code of the location"
        },
        "id": {
          "type": "string",
          "description": "The id of the location"
        },
        "latitude": {
          "type": "number",
          "description": "The latitude of the location"
        },
        "lnKey": {
          "type": "integer",
          "format": "int32",
          "description": "The key of the location name"
        },
        "locationCode": {
          "type": "string",
          "description": "The code of the location"
        },
        "locationType": {
          "type": "string",
          "description": "The type of the location"
        },
        "longitude": {
          "type": "number",
          "description": "The longitude of the location"
        },
        "name": {
          "type": "string",
          "description": "The name of the location"
        }
      }
    },
    "PageResultOfResourceOfRequest": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request"
          }
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "Request": {
      "type": "object",
      "properties": {
        "approvalLimitDate": {
          "type": "string",
          "description": "The date by which the Request must be approved. This element appears only when integrated with Concur Travel"
        },
        "approvalStatus": {
          "description": "The approval status of the Request",
          "$ref": "#/definitions/ApprovalStatus"
        },
        "approved": {
          "type": "boolean",
          "description": "Indicates whether this Request is approved"
        },
        "authorizedDate": {
          "type": "string",
          "description": "The date when the Request was authorized"
        },
        "businessPurpose": {
          "type": "string",
          "description": "The business purpose of the Request"
        },
        "canceledPostApproval": {
          "type": "boolean",
          "description": "Indicates whether this Request was canceled post approval"
        },
        "closed": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether the Request is closed"
        },
        "comment": {
          "type": "string",
          "description": "The last comment attached to this Request"
        },
        "comments": {
          "description": "Comment history of this Request",
          "$ref": "#/definitions/ResourceLink"
        },
        "creationDate": {
          "type": "string",
          "description": "The date when the Request was created (in the format yyyy-MM-dd'T'HH:mm:ss.SSS'Z')"
        },
        "custom1": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom10": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom11": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom12": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom13": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom14": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom15": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom16": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom17": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom18": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom19": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom2": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom20": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom3": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom4": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom5": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom6": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom7": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom8": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom9": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "endDate": {
          "type": "string",
          "description": "The end date of the Request (in the format YYYY-MM-DD)"
        },
        "endTime": {
          "type": "string",
          "description": "The start time of the Request (in the format HH:MM)"
        },
        "everSentBack": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether the Request has ever been sent back to the employee"
        },
        "expenses": {
          "type": "array",
          "description": "Expected Expenses attached to this Request",
          "items": {
            "$ref": "#/definitions/ResourceLink"
          }
        },
        "extensionOf": {
          "description": "The Request that this Request is an extension of, or adendum to",
          "$ref": "#/definitions/RequestLink"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the Request"
        },
        "lastModified": {
          "type": "string",
          "description": "The date when the Request was last modified"
        },
        "mainDestination": {
          "description": "The main destination of the Request",
          "$ref": "#/definitions/Location"
        },
        "name": {
          "type": "string",
          "description": "The name of the Request"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "owner": {
          "description": "The employee who owns the Request",
          "$ref": "#/definitions/Employee"
        },
        "pendingApproval": {
          "type": "boolean",
          "description": "Indicates whether this Request is pending approval"
        },
        "policy": {
          "description": "The policy that applies to the Request",
          "$ref": "#/definitions/ResourceLink"
        },
        "requestId": {
          "type": "string",
          "description": "The public key of the Request (unique per customer)"
        },
        "startDate": {
          "type": "string",
          "description": "The start date of the Request (in the format YYYY-MM-DD)"
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the Request (in the format HH:MM)"
        },
        "submitDate": {
          "type": "string",
          "description": "The date when the Request was submitted (last submit date in case of recall)"
        },
        "totalApprovedAmount": {
          "description": "The total amount of approved expenses in the Request, expressed in the reimbursement currency of the employee at the time he created the Request",
          "$ref": "#/definitions/Amount"
        },
        "totalPostedAmount": {
          "description": "The total amount of the Request, expressed in the reimbursement currency of the employee at the time he created the Request",
          "$ref": "#/definitions/Amount"
        },
        "totalRemainingAmount": {
          "description": "The total amount not included in an Expense report, expressed in the reimbursement currency of the employee at the time he created the Request",
          "$ref": "#/definitions/Amount"
        },
        "travelAgency": {
          "description": "The travel agency office that is managing the trip associated to this Request",
          "$ref": "#/definitions/ResourceLink"
        },
        "type": {
          "description": "The type of the Request, inherited from the Request policy type",
          "$ref": "#/definitions/RequestType"
        }
      }
    },
    "RequestLink": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "The public id of the Request"
        }
      }
    },
    "ResourceLink": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "template": {
          "type": "string"
        }
      }
    },
    "RequestType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code of the type inherited from the Request policy type"
        },
        "label": {
          "type": "string",
          "description": "The label of the type inherited from the Request policy type"
        }
      }
    },
    "ResourceOfPolicy": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "Hyperlink to the resource for this Request policy"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the Request policy",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "name": {
          "type": "string",
          "description": "Name of the Request policy",
          "minLength": 1,
          "maxLength": 2147483647
        }
      }
    },
    "ResourceOfTravelAgency": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string",
          "description": "The travel agency email address"
        },
        "id": {
          "type": "string",
          "description": "The travel agency unique identifier",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "name": {
          "type": "string",
          "description": "The travel agency office name",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "proposalType": {
          "type": "string",
          "description": "The travel agency proposal type",
          "enum": [
            "CWTF",
            "AEBT",
            "API",
            "NONE"
          ]
        }
      }
    },
    "SegmentLeg": {
      "type": "object",
      "properties": {
        "class": {
          "description": "The class of the segment leg.",
          "$ref": "#/definitions/ListItemField"
        },
        "classOfService": {
          "type": "string",
          "description": "The class of service of the segment leg. For example, in the case of an air segment, this field would contain the one-letter booking code: Y for economy class, or F for first class..."
        },
        "comment": {
          "type": "string",
          "description": "A comment for this segment leg"
        },
        "custom1": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom10": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom11": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom12": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom13": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom14": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom15": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom16": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom17": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom18": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom19": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom2": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom20": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom21": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom22": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom23": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom24": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom25": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom26": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom27": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom28": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom29": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom3": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom30": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom31": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom32": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom33": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom34": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom35": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom36": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom37": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom38": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom39": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom4": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom40": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom5": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom6": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom7": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom8": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom9": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "endDate": {
          "type": "string",
          "description": "The end date of the segment leg (in the format YYYY-MM-DD).It represents the arrival date of AIRFR and TRAIN segments, check out date for HOTEL or drop off for CARRT"
        },
        "endLocation": {
          "description": "The end location of the segment leg",
          "$ref": "#/definitions/Location"
        },
        "endLocationDetail": {
          "type": "string",
          "description": "Additional details about the end location. It is used for HOTEL and CARRT segments."
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the segment leg (in the format HH:MM). It is expressed in the local time of the end location"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the segment leg"
        },
        "returnLeg": {
          "type": "boolean",
          "example": false,
          "description": "This value indicates if the leg is a return leg or not."
        },
        "segmentLocator": {
          "type": "string",
          "description": "The identifier for Concur Travel segments"
        },
        "startDate": {
          "type": "string",
          "description": "The start date of the segment leg (in the format YYYY-MM-DD). It represents the departure date of AIRFR and TRAIN segments, check in date for HOTEL or pickup for CARRT"
        },
        "startLocation": {
          "description": "The start location of the segment leg (for HOTEL, this is empty)",
          "$ref": "#/definitions/Location"
        },
        "startLocationDetail": {
          "type": "string",
          "description": "Additional details about the start location. It is used for HOTEL and CARRT segments."
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the segment leg (in the format HH:MM). It is expressed in the local time of the start location"
        },
        "vendorName": {
          "type": "string",
          "description": "The name of the vendor of this segment leg."
        }
      }
    },
    "SegmentType": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "The category of the segment type",
          "enum": [
            "REQ_SEG_AIRFR",
            "REQ_SEG_CARRT",
            "REQ_SEG_HOTEL",
            "REQ_SEG_LIMOF",
            "REQ_SEG_RAILF",
            "REQ_SEG_TAXIF",
            "REQ_SEG_MISC",
            "REQ_SEG_PARKG",
            "REQ_SEG_DININ",
            "REQ_SEG_EVENT"
          ]
        },
        "code": {
          "type": "string",
          "description": "The code of the segment type. This will most frequently be a String, but could also be an integer in the case of a custom expense typeFor example, would be category = REQ_SEG_AIRFR and code = AIRFR for a regular air segment, but category = REQ_SEG_AIRFR and code = 10325 for a custom air segment."
        }
      }
    },
    "TravelAllowance": {
      "type": "object",
      "properties": {
        "dailyTravelAllowanceId": {
          "type": "string",
          "description": "The fixed daily travel allowance id associated with the Expected Expense"
        }
      }
    },
    "TripData": {
      "type": "object",
      "required": [
        "segmentType"
      ],
      "properties": {
        "agencyBooked": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether this trip has been booked by a Travel Agency or not. True if this trip is (or has to be) handled by a Travel Agency."
        },
        "legs": {
          "type": "array",
          "description": "List of the legs composing this segment",
          "items": {
            "$ref": "#/definitions/SegmentLeg"
          }
        },
        "segmentType": {
          "description": "The type of the segment",
          "$ref": "#/definitions/SegmentType"
        },
        "selfBooked": {
          "type": "boolean",
          "example": false,
          "description": "True if this trip has been reserved by Concur Travel, or if Concur Travel has retrieved the trip information in the GDS"
        },
        "tripType": {
          "type": "string",
          "description": "Indicates the type of this trip. Possible values are: ONE_WAY, ROUND_TRIP, MULTI_STOPS",
          "enum": [
            "ONE_WAY",
            "ROUND_TRIP",
            "MULTI_STOPS"
          ]
        }
      }
    },
    "Vendor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The vendor identifier of the Expected Expense"
        },
        "name": {
          "type": "string",
          "description": "The vendor description of the Expected Expense"
        }
      }
    },
    "WorkflowAction": {
      "type": "string",
       "description": "Comment when the workflow action is ‘sendback’."
    }
  }
}
