{
  "swagger": "2.0",
  "info": {
    "description": "Manage expected expense entries attached to a Request document.",
    "version": "4.0",
    "title": "Workflow"
  },
  "host": "www.concursolutions.com",
  "basePath": "/api/v4",
  "tags": [
    {
    "name": "Resources",
    "description": " "
    }
  ],
  "paths": {
    "/travelrequest/requests/{requestUuid}/expenses": {
      "get": {
        "tags": [
          "expense-resource"
        ],
        "summary": "Get expected expenses attached to a request",
        "operationId": "listUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requestUuid",
            "in": "path",
            "description": "Name of the perimeter defining the requests to get",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user viewing the expected expenses attached to a Request",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceOfExpense"
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "Principal is not allowed to perform operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "expense-resource"
        ],
        "summary": "Create a new expected expense",
        "operationId": "createUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requestUuid",
            "in": "path",
            "description": "The unique identifier of the Request to which the Expense is attached",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "expense",
            "description": "expense",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Expense"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user performing the expense creation",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ResourceOfExpense"
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "Principal is not allowed to perform operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/travelrequest/expenses/{expenseUuid}": {
      "get": {
        "tags": [
          "expense-resource"
        ],
        "summary": "Get an existing expected expense",
        "operationId": "getUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expenseUuid",
            "in": "path",
            "description": "The unique identifier of the Expense",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user viewing the expected expense",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceOfExpense"
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "Principal is not allowed to perform operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "expense-resource"
        ],
        "summary": "Update the content of an existing expected expense",
        "operationId": "updateUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expenseUuid",
            "in": "path",
            "description": "The unique identifier of the Expense",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "expense",
            "description": "expense",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Expense"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user performing the expense update",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceOfExpense"
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "Principal is not allowed to perform operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "expense-resource"
        ],
        "summary": "Delete an expected expense from the request",
        "operationId": "deleteUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "expenseUuid",
            "in": "path",
            "description": "The unique identifier of the Expense",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The unique identifier of the user performing the deletion of the expense",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "The request is invalid",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Request is not authenticated"
          },
          "403": {
            "description": "Principal is not allowed to perform operation"
          },
          "500": {
            "description": "An unexpected error has prevented the operation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "503": {
            "description": "The service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActionOfImportItinProposalAction": {
      "type": "object",
      "properties": {
        "emtAction": {
          "$ref": "#/definitions/ImportItinProposalAction"
        }
      }
    },
    "AgencyProposal": {
      "type": "object",
      "required": [
        "agencyProposalEntries",
        "booked",
        "importDate"
      ],
      "properties": {
        "agencyProposalEntries": {
          "type": "array",
          "description": "List of the proposal entries",
          "items": {
            "$ref": "#/definitions/AgencyProposalEntry"
          }
        },
        "agencyProposalType": {
          "type": "string",
          "description": "The agency proposal type - equal API for generic proposition",
          "enum": [
            "CWT",
            "CWTF",
            "AEBT",
            "API",
            "NONE"
          ]
        },
        "approvalLimitDate": {
          "type": "string",
          "description": "The date by which the Request must be approved. This element appears only when integrated with Concur Travel"
        },
        "autoSelect": {
          "type": "boolean",
          "example": false,
          "description": "The option AutoSelect permit to choose automaticly a proposal"
        },
        "booked": {
          "type": "boolean",
          "example": false,
          "description": "True if this travel is (or has to be) handled by a travel agency"
        },
        "comments": {
          "type": "string",
          "description": "Comment",
          "minLength": 0,
          "maxLength": 2000
        },
        "importDate": {
          "type": "string",
          "description": "The date of the import"
        },
        "itineraryLocator": {
          "type": "string",
          "description": "Itinerary Locator",
          "minLength": 0,
          "maxLength": 32
        },
        "policyCompliant": {
          "type": "boolean",
          "example": false,
          "description": "The policy Compliant"
        },
        "proposal": {
          "type": "boolean",
          "example": false,
          "description": "True if the status is proposal and false if the status is confirmed or Ticket issued"
        },
        "proposalBatchSize": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the batch of proposal expected to be received.",
          "minimum": 1,
          "exclusiveMinimum": false
        },
        "proposalOrder": {
          "type": "integer",
          "format": "int32",
          "description": "The position of the proposal",
          "minimum": 1,
          "exclusiveMinimum": false
        },
        "proposalUuid": {
          "type": "string",
          "description": "Unique Identifier of Agency Proposal receive"
        },
        "providerMessageId": {
          "type": "string",
          "description": "The provider Message Id",
          "minLength": 0,
          "maxLength": 32
        },
        "selected": {
          "type": "boolean",
          "example": false,
          "description": "By default equal false, but it's true when the user choose it"
        },
        "status": {
          "type": "string",
          "description": "The status send in the proposal equal [proposal] or [confirmed] or [ticketissue]",
          "enum": [
            "PROPOSAL",
            "CONFIRMED",
            "TICKETISSUED"
          ]
        },
        "totalPostedAmount": {
          "description": "The total Amount of the proposal",
          "$ref": "#/definitions/Amount"
        }
      }
    },
    "AgencyProposalEntry": {
      "type": "object",
      "required": [
        "agencyProposalSegments",
        "transactionDate"
      ],
      "properties": {
        "agencyProposalSegments": {
          "type": "array",
          "description": "List of the segments composing this entry",
          "items": {
            "$ref": "#/definitions/AgencyProposalSegment"
          }
        },
        "comments": {
          "type": "string",
          "description": "Legs comments"
        },
        "exchangeRate": {
          "description": "The exchange rate that applies to the Proposal Segment amount",
          "$ref": "#/definitions/ExchangeRate"
        },
        "matchingExpense": {
          "description": "The expense link",
          "$ref": "#/definitions/ResourceLink"
        },
        "proposalEntryUuid": {
          "type": "string",
          "description": "Unique Identifier of Agency Proposal entry receive"
        },
        "transactionAmount": {
          "description": "The amount of the Proposal Entry",
          "$ref": "#/definitions/Amount"
        },
        "transactionDate": {
          "type": "string",
          "description": "The date of the transaction"
        }
      }
    },
    "AgencyProposalSegment": {
      "type": "object",
      "required": [
        "booked",
        "confirmationNumber",
        "pnr",
        "proposalSegmentType",
        "vendorName"
      ],
      "properties": {
        "booked": {
          "type": "boolean",
          "example": false,
          "description": "True if this travel is (or has to be) handled by a travel agency"
        },
        "comments": {
          "type": "string",
          "description": "A comments for this Proposal Segment",
          "minLength": 0,
          "maxLength": 2000
        },
        "confirmationNumber": {
          "type": "string",
          "description": "The number of the confirmation of this Proposal Segment",
          "minLength": 0,
          "maxLength": 32
        },
        "endDate": {
          "type": "string",
          "description": "The end date of the Proposal Segment (in the format YYYY-MM-DD).It represents the arrival date of AIRFR and TRAIN segments, check out date for HOTEL or drop off for CARRT"
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the Proposal Segment (in the format HH:MM). It is expressed in the local time of the endLocation"
        },
        "matchingSegmentLeg": {
          "description": "The Segment Leg link",
          "$ref": "#/definitions/ResourceLink"
        },
        "pnr": {
          "type": "string",
          "description": "PNR of the proposal",
          "minLength": 1,
          "maxLength": 32
        },
        "policyCompliant": {
          "type": "boolean",
          "example": false,
          "description": "The policy Compliant"
        },
        "policyCompliantLevel": {
          "type": "integer",
          "format": "int32",
          "description": "The policy Compliant Level",
          "minimum": 0,
          "maximum": 100,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "proposalSegmentType": {
          "type": "string",
          "description": "The proposal type : AIR, RAIL, CAR, HOTEL or MISC of this Proposal Segment",
          "enum": [
            "AIR",
            "RAIL",
            "CAR",
            "HOTEL",
            "MISC"
          ]
        },
        "proposalSegmentUuid": {
          "type": "string",
          "description": "Unique Identifier of Agency Proposal Segment receive"
        },
        "segmentTypeCode": {
          "type": "string",
          "description": "The segment type : AIRFR, RAILF, CARRT, HOTEL or MISC of this Proposal Segment",
          "enum": [
            "AIRFR",
            "CARRT",
            "HOTEL",
            "LIMOF",
            "TAXIF",
            "MISC",
            "PARKG",
            "DININ",
            "EVENT",
            "OTHER",
            "VISA",
            "INSUR",
            "AIRSU",
            "RAISU",
            "RAILF"
          ]
        },
        "startDate": {
          "type": "string",
          "description": "The start date of the Proposal Segment (in the format YYYY-MM-DD).It represents the departure date of AIRFR and TRAIN segments, check in date for HOTEL or pickup for CARRT"
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the proposal segment (in the format HH:MM). It is expressed in the local time of the startLocation\""
        },
        "timeZone": {
          "description": "The timezone. Either in UTC/GMT + offset format or matching TZDB names.",
          "$ref": "#/definitions/ZoneId"
        },
        "vendorName": {
          "type": "string",
          "description": "The name of the vendor of this Proposal Segment.",
          "minLength": 0,
          "maxLength": 64
        }
      }
    },
    "Allocation": {
      "type": "object",
      "properties": {
        "allocationAmount": {
          "description": "The amount of the allocation calculated with the percentage value multiplied by the transaction amount on the expense. This amount is given in the transaction's currency",
          "$ref": "#/definitions/Amount"
        },
        "allocationId": {
          "type": "string",
          "description": "The unique allocation identifier."
        },
        "approvedAmount": {
          "description": "The amount of the allocation calculated with the percentage value multiplied by the approved amount on the expense. This amount is given in the user's currency",
          "$ref": "#/definitions/Amount"
        },
        "custom1": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom10": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom11": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom12": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom13": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom14": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom15": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom16": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom17": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom18": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom19": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom2": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom20": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom3": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom4": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom5": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom6": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom7": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom8": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom9": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "expenseId": {
          "type": "string",
          "description": "The unique identifier of the expense associated with the allocation"
        },
        "percentEdited": {
          "type": "boolean",
          "example": false,
          "description": "Whether the allocation percent has been edited"
        },
        "percentage": {
          "type": "number",
          "description": "The percentage of the total expense that this allocation represents"
        },
        "postedAmount": {
          "description": "The amount of the allocation calculated with the percentage value multiplied by the posted amount on the expense. This amount is given in the user's currency",
          "$ref": "#/definitions/Amount"
        },
        "systemAllocation": {
          "type": "boolean",
          "example": false,
          "description": "Whether the allocation is a system allocation, usually hidden from the user. If displayed to the user, should be read-only"
        }
      }
    },
    "Amount": {
      "type": "object",
      "required": [
        "currency",
        "value"
      ],
      "properties": {
        "currency": {
          "type": "string",
          "description": "The 3-letter ISO 4217 code for the currency in which the amount is expressed",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "value": {
          "type": "number",
          "description": "The amount in the defined currency",
          "minimum": 1,
          "maximum": 2147483647
        }
      }
    },
    "ApprovalStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code for the approval status the Request",
          "minLength": 1,
          "maxLength": 2147483647,
          "enum": [
            "APPROVED",
            "CANCELED",
            "NOT_SUBMITTED",
            "PENDING_BOOKING",
            "SENTBACK",
            "SUBMITTED"
          ]
        },
        "name": {
          "type": "string",
          "description": "The approval status of the Request in the current user's language",
          "minLength": 1,
          "maxLength": 2147483647
        }
      }
    },
    "AuditTrailAction": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        }
      }
    },
    "BodyOfImportItinProposalAction": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/ActionOfImportItinProposalAction"
        }
      }
    },
    "Booking": {
      "type": "object",
      "properties": {
        "bookingSource": {
          "type": "string"
        },
        "calculatedAirCharges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CalculatedAirCharge"
          }
        },
        "charges": {
          "$ref": "#/definitions/Charges"
        },
        "dateBookedLocal": {
          "type": "string",
          "format": "date-time"
        },
        "itinSourceId": {
          "type": "integer",
          "format": "int32"
        },
        "itinSourceName": {
          "type": "string"
        },
        "lastTicketDateUtc": {
          "type": "string",
          "format": "date-time"
        },
        "railPayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RailPayment"
          }
        },
        "railQuotes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RailPayment"
          }
        },
        "recordLocator": {
          "type": "string"
        },
        "remarks": {
          "$ref": "#/definitions/Remarks"
        },
        "segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Segment"
          }
        }
      }
    },
    "CalculatedAirCharge": {
      "type": "object",
      "properties": {
        "netFare": {
          "type": "number"
        },
        "totalFareCurrency": {
          "type": "string"
        }
      }
    },
    "Charges": {
      "type": "object",
      "properties": {
        "fixed": {
          "$ref": "#/definitions/Fixed"
        }
      }
    },
    "ClientSetting": {
      "type": "object",
      "properties": {
        "enableCompanyNui": {
          "type": "boolean"
        },
        "entityId": {
          "type": "string"
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "author": {
          "description": "Comment's author (Create by)",
          "$ref": "#/definitions/Employee"
        },
        "creationDateTime": {
          "type": "string",
          "description": "Creation date of the comment (in the format YYYY-MM-DD HH:mm:ss.SSS)"
        },
        "isLatest": {
          "type": "boolean",
          "example": false,
          "description": "true when the comment has been edited since the last workflow transition"
        },
        "value": {
          "type": "string",
          "description": "Comment value"
        }
      }
    },
    "CurrencyAmount": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "currency": {
          "type": "string"
        }
      }
    },
    "CustomAttribute": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "dataType": {
          "type": "string"
        },
        "displayOnItinerary": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CustomField": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The short code for the list item. For non-list fields, this value will be blank"
        },
        "href": {
          "type": "string",
          "description": "The HATEOAS link to get this list item in case of a list. This value will be blank otherwise."
        },
        "value": {
          "type": "string",
          "description": "The value of the custom field or the value of the list item id for list fields"
        }
      }
    },
    "DataRetentionDetails": {
      "type": "object",
      "properties": {
        "dataRetentionDate": {
          "type": "string",
          "example": "yyyy-MM-dd'T'HH:mm:ss'Z'"
        },
        "dataRetentionPolicyId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "Duration": {
      "type": "object",
      "properties": {
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "negative": {
          "type": "boolean"
        },
        "seconds": {
          "type": "integer",
          "format": "int64"
        },
        "units": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemporalUnit"
          }
        },
        "zero": {
          "type": "boolean"
        }
      }
    },
    "EMTSaveActionResponse": {
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "Employee": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "The first name of the employee"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastName": {
          "type": "string",
          "description": "The last name of the employee"
        },
        "middleInitial": {
          "type": "string",
          "description": "The middle initial of the employee"
        },
        "template": {
          "type": "string"
        }
      }
    },
    "EntitySetting": {
      "type": "object",
      "properties": {
        "enableAgencyFeesEstimates": {
          "type": "boolean"
        },
        "enableApprovalNui": {
          "type": "boolean"
        },
        "enableAutoCancel": {
          "type": "boolean"
        },
        "enableAutoCreateReport": {
          "type": "boolean"
        },
        "enableCopyTA": {
          "type": "boolean"
        },
        "enableFundsManagement": {
          "type": "boolean"
        },
        "enableMileageNui": {
          "type": "boolean"
        },
        "enableNewAirportSearch": {
          "type": "boolean"
        },
        "enableNewRoutesNui": {
          "type": "boolean"
        },
        "enableNuiPreview": {
          "type": "boolean"
        },
        "enablePassiveApproval": {
          "type": "boolean"
        },
        "enablePublicApi": {
          "type": "boolean"
        },
        "enableRaaSAgencyProposal": {
          "type": "boolean"
        },
        "enableRaaSAgencyProposalTravelImport": {
          "type": "boolean"
        },
        "enableSimpleBudgetRequest": {
          "type": "boolean"
        },
        "enableTAExpenseSummary": {
          "type": "boolean"
        },
        "enableUserCache": {
          "type": "boolean"
        },
        "entityId": {
          "type": "string"
        }
      }
    },
    "ErrorEntity": {
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "exception": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "correlationId": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "facts": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "receivedCount": {
          "type": "integer",
          "format": "int32"
        },
        "subtopic": {
          "type": "string"
        },
        "timeStamp": {
          "type": "string"
        },
        "topic": {
          "type": "string"
        }
      }
    },
    "ExchangeRate": {
      "type": "object",
      "required": [
        "operation",
        "value"
      ],
      "properties": {
        "operation": {
          "type": "string",
          "description": "Exchange rate operation. Possible values: 'MULTIPLY' or 'DIVIDE'",
          "enum": [
            "MULTIPLY",
            "DIVIDE"
          ]
        },
        "value": {
          "type": "number",
          "description": "Exchange rate value"
        }
      }
    },
    "Expense": {
      "type": "object",
      "required": [
        "transactionDate"
      ],
      "properties": {
        "allocations": {
          "type": "array",
          "description": "List of the allocations composing this segment",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        },
        "approvedAmount": {
          "description": "The approved amount of the expense entry",
          "$ref": "#/definitions/Amount"
        },
        "budgetAccrualDate": {
          "type": "string",
          "example": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        },
        "businessPurpose": {
          "type": "string",
          "description": "The purpose of the Request entry"
        },
        "comments": {
          "description": "Historical comments to the Expense",
          "$ref": "#/definitions/ResourceLink"
        },
        "custom1": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom10": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom11": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom12": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom13": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom14": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom15": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom16": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom17": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom18": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom19": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom2": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom20": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom21": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom22": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom23": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom24": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom25": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom26": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom27": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom28": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom29": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom3": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom30": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom31": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom32": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom33": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom34": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom35": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom36": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom37": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom38": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom39": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom4": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom40": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom5": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom6": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom7": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom8": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom9": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "exchangeRate": {
          "description": "The exchange rate that applies to the entry",
          "$ref": "#/definitions/ExchangeRate"
        },
        "expenseType": {
          "description": "The expense type of the entry",
          "$ref": "#/definitions/ExpenseType"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the entry"
        },
        "lastComment": {
          "type": "string",
          "description": "The last comment of the entry"
        },
        "lastModifiedDate": {
          "type": "string",
          "description": "The date when this expense was last modified"
        },
        "location": {
          "description": "The location of the expense entry",
          "$ref": "#/definitions/Location"
        },
        "orgUnit1": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit2": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit3": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit4": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit5": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit6": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "postedAmount": {
          "description": "The posted amount of the expense entry",
          "$ref": "#/definitions/Amount"
        },
        "remainingAmount": {
          "description": "The remaining amount of the expense entry",
          "$ref": "#/definitions/Amount"
        },
        "source": {
          "type": "string",
          "description": "The source that created the expense. It can be CASH_ADVANCE or TRAVEL_ALLOWANCE. This field will be empty in any other case.",
          "enum": [
            "CASH_ADVANCE",
            "TRAVEL_ALLOWANCE",
            "AGENCY_FEE"
          ]
        },
        "transactionAmount": {
          "description": "The amount of the expense entry, in the transaction currency paid to the vendor",
          "$ref": "#/definitions/Amount"
        },
        "transactionDate": {
          "type": "string",
          "description": "The date of the transaction"
        },
        "travelAllowance": {
          "description": "The Travel allowance",
          "$ref": "#/definitions/TravelAllowance"
        },
        "tripData": {
          "description": "This property is non empty if this expense represents a travel segment (AIR, CAR, HOTEL, ...)",
          "$ref": "#/definitions/TripData"
        },
        "vendor": {
          "description": "The vendor of the expense entry",
          "$ref": "#/definitions/Vendor"
        }
      }
    },
    "ExpenseType": {
      "type": "object",
      "properties": {
        "agencyVisible": {
          "type": "boolean",
          "example": false,
          "description": "Whether the segment is managed by agency"
        },
        "caRelated": {
          "type": "boolean",
          "example": false,
          "description": "The related cash advance to the expense type"
        },
        "code": {
          "type": "string",
          "description": "Language code of the expense type"
        },
        "customFormId": {
          "type": "integer",
          "format": "int32",
          "description": "The custom form id of the expense"
        },
        "expId": {
          "type": "string",
          "description": "The key to expenseType"
        },
        "expKey": {
          "type": "string",
          "description": "The key to expenseType"
        },
        "formId": {
          "type": "integer",
          "format": "int32",
          "description": "The form id of the expense"
        },
        "formType": {
          "type": "string",
          "description": "Form code of the Expense type"
        },
        "formula": {
          "type": "string",
          "description": "The amount calculation formula upon the expense type"
        },
        "hasSegment": {
          "type": "boolean",
          "example": false,
          "description": "Whether the expense type is a segment one"
        },
        "href": {
          "type": "string",
          "description": "Hyperlink to the resource for the expense type definition"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the expense type"
        },
        "name": {
          "type": "string",
          "description": "Name of the expense type"
        },
        "spendCategoryCode": {
          "type": "string",
          "description": "The spend Category Code of the expense type"
        },
        "spendExpenseCode": {
          "type": "string",
          "description": "The spend expense category code"
        }
      }
    },
    "ExpenseTypeCategory": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "description": "List of the expense types of the category",
          "items": {
            "$ref": "#/definitions/ExpenseType"
          }
        },
        "id": {
          "type": "string",
          "description": "The expense type category id"
        },
        "name": {
          "type": "string",
          "description": "The expense type category name"
        }
      }
    },
    "Fixed": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "currency": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        }
      }
    },
    "Header": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "integer",
          "format": "int32"
        },
        "entityId": {
          "type": "string"
        },
        "log": {
          "$ref": "#/definitions/Log"
        }
      }
    },
    "ImportItinProposalAction": {
      "type": "object",
      "properties": {
        "itinerary": {
          "$ref": "#/definitions/Itinerary"
        }
      }
    },
    "Itinerary": {
      "type": "object",
      "properties": {
        "approvalStatus": {
          "type": "integer",
          "format": "int32"
        },
        "bookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Booking"
          }
        },
        "clientLocator": {
          "type": "string"
        },
        "cliqbookState": {
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttribute"
          }
        },
        "dateBookedLocal": {
          "type": "string",
          "format": "date-time"
        },
        "dateCreatedUtc": {
          "type": "string",
          "format": "date-time"
        },
        "dateModifiedUtc": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "endDateLocal": {
          "type": "string",
          "format": "date-time"
        },
        "endDateUtc": {
          "type": "string",
          "format": "date-time"
        },
        "isExpensed": {
          "type": "boolean"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "itinLocator": {
          "type": "string"
        },
        "itinSourceId": {
          "type": "integer",
          "format": "int32"
        },
        "ruleViolations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleViolation"
          }
        },
        "startDateLocal": {
          "type": "string",
          "format": "date-time"
        },
        "startDateUtc": {
          "type": "string",
          "format": "date-time"
        },
        "travelRequestId": {
          "type": "string"
        },
        "tripName": {
          "type": "string"
        },
        "tripStatus": {
          "type": "string",
          "format": "byte"
        },
        "tripTotal": {
          "$ref": "#/definitions/TripTotal"
        },
        "userCuuid": {
          "type": "string"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "JobDescription": {
      "type": "object",
      "properties": {
        "dataRetentionDetails": {
          "$ref": "#/definitions/DataRetentionDetails"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "jobType": {
          "type": "string"
        },
        "key": {
          "$ref": "#/definitions/RequestKey"
        },
        "result": {
          "$ref": "#/definitions/JobResult"
        },
        "retryCount": {
          "type": "integer",
          "format": "int32"
        },
        "scheduledDate": {
          "type": "string",
          "example": "yyyy-MM-dd'T'HH:mm:ss'Z'"
        }
      }
    },
    "JobResult": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SCHEDULED",
            "CANCELED",
            "RUNNING",
            "COMPLETED",
            "ABORTED",
            "DELETED",
            "ERROR"
          ]
        }
      }
    },
    "Link": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "templated": {
          "type": "boolean"
        }
      }
    },
    "ListItemField": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The short code of the list item."
        },
        "href": {
          "type": "string",
          "description": "The HATEOAS link to get this list item."
        },
        "value": {
          "type": "string",
          "description": "The value of the list item id."
        }
      }
    },
    "LocalTime": {
      "type": "object",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "second": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "airportName": {
          "type": "string",
          "description": "The aiport name of the location"
        },
        "city": {
          "type": "string",
          "description": "The city of the location"
        },
        "countryCode": {
          "type": "string",
          "description": "The code of the country"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "description": "The country sub code"
        },
        "iataCode": {
          "type": "string",
          "description": "The IATA code for the location"
        },
        "id": {
          "type": "string",
          "description": "The id of the location"
        },
        "latitude": {
          "type": "number",
          "description": "The latitude of the location"
        },
        "lnKey": {
          "type": "integer",
          "format": "int32",
          "description": "The key of the location name"
        },
        "locationCode": {
          "type": "string",
          "description": "The code of the location"
        },
        "locationType": {
          "type": "string",
          "description": "The type of the location"
        },
        "longitude": {
          "type": "number",
          "description": "The longitude of the location"
        },
        "name": {
          "type": "string",
          "description": "The name of the location"
        }
      }
    },
    "LocationView": {
      "type": "object",
      "properties": {
        "airportName": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "ctryCode": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "iataCode": {
          "type": "string"
        },
        "isIata": {
          "type": "string"
        },
        "lnKey": {
          "type": "integer",
          "format": "int32"
        },
        "locKey": {
          "type": "integer",
          "format": "int32"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "name": {
          "type": "string"
        },
        "subCountryName": {
          "type": "string"
        }
      }
    },
    "Log": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string"
        }
      }
    },
    "PageResultOfEvent": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PageResultOfJobDescription": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobDescription"
          }
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PageResultOfResourceOfRequest": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceOfRequest"
          }
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Point": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      }
    },
    "Policy": {
      "type": "object",
      "properties": {
        "autoCreateReportConfig": {
          "type": "string",
          "description": "The report creation automation mode (ex: on the request start date",
          "enum": [
            "ON_REQUEST_START_DATE",
            "NONE"
          ]
        },
        "dataRetentionPolicyId": {
          "type": "string",
          "description": "Unique Identifier of Data Retention policy"
        },
        "enablePostApprovalTripUpdate": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether Post Approval Trip Updates are enabled for the Request policy"
        },
        "enableRequestEntriesToER": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether the copy of the Request Entries feature, to an existing Report, is enabled"
        },
        "expensePolicy": {
          "description": "The expense policy that applies to the Request policy",
          "$ref": "#/definitions/ResourceLink"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the Request policy",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "name": {
          "type": "string",
          "description": "Name of the Request policy",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "passiveApprovalAction": {
          "type": "string",
          "description": "Passive Approval action",
          "enum": [
            "APPROVED",
            "CANCELED",
            "NOT_SUBMITTED",
            "PENDING_BOOKING",
            "SENTBACK",
            "SUBMITTED"
          ]
        },
        "passiveApprovalDelayAfterSubmit": {
          "type": "integer",
          "format": "int32",
          "description": "Passive Approval delay after submit"
        },
        "passiveApprovalDelayBeforeApprovalLimit": {
          "type": "integer",
          "format": "int32",
          "description": "Passive Approval delay before ApprovalLimitDate"
        }
      }
    },
    "PolicyUpdate": {
      "type": "object",
      "properties": {
        "dataRetentionPolicyId": {
          "type": "string",
          "description": "Unique Identifier of Data Retention policy"
        }
      }
    },
    "RailPayment": {
      "type": "object",
      "properties": {
        "totalFare": {
          "type": "number"
        },
        "totalFareCurrency": {
          "type": "string"
        }
      }
    },
    "RemarkData": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        }
      }
    },
    "Remarks": {
      "type": "object",
      "properties": {
        "generalRemarks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RemarkData"
          }
        }
      }
    },
    "Request": {
      "type": "object",
      "properties": {
        "approvalLimitDate": {
          "type": "string",
          "description": "The date by which the Request must be approved. This element appears only when integrated with Concur Travel"
        },
        "approvalStatus": {
          "description": "The approval status of the Request",
          "$ref": "#/definitions/ApprovalStatus"
        },
        "approved": {
          "type": "boolean"
        },
        "approver": {
          "description": "The approver of this request. Null when request is in an approvalStatus different from SUBMITTED",
          "$ref": "#/definitions/Employee"
        },
        "authorizedDate": {
          "type": "string",
          "description": "The date the Request was authorized"
        },
        "businessPurpose": {
          "type": "string",
          "description": "The businessPurpose of the Request"
        },
        "canceledPostApproval": {
          "type": "boolean"
        },
        "closed": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether the Request is closed"
        },
        "comment": {
          "type": "string",
          "description": "The last comment attached to this Request"
        },
        "comments": {
          "description": "Historical comments header to the Request",
          "$ref": "#/definitions/ResourceLink"
        },
        "creationDate": {
          "type": "string",
          "description": "For approved request, the date at which the approval process was completed"
        },
        "custom1": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom10": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom11": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom12": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom13": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom14": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom15": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom16": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom17": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom18": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom19": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom2": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom20": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom3": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom4": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom5": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom6": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom7": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom8": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom9": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "endDate": {
          "type": "string",
          "description": "The end date of the Request (in the format YYYY-MM-DD)"
        },
        "endTime": {
          "type": "string",
          "description": "The start time of the Request (in the format HH:MM)"
        },
        "everSentBack": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether the Request has ever been sent back to the employee"
        },
        "expensePolicy": {
          "description": "The expense policy that applies to the Request",
          "$ref": "#/definitions/ResourceLink"
        },
        "expenses": {
          "type": "array",
          "description": "Expected expenses attached to this Request",
          "items": {
            "$ref": "#/definitions/ResourceLink"
          }
        },
        "extensionOf": {
          "description": "The Request that this Request is an extension of, or adendum to",
          "$ref": "#/definitions/RequestLink"
        },
        "highestExceptionLevel": {
          "type": "string",
          "description": "The highest level of exception contained in this request. One of { NONE, WARNING, ERROR }",
          "enum": [
            "NONE",
            "WARNING",
            "ERROR"
          ]
        },
        "href": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the Request"
        },
        "lastModified": {
          "type": "string",
          "description": "The date the Request was last modified"
        },
        "mainDestination": {
          "description": "The main destination of the Request",
          "$ref": "#/definitions/Location"
        },
        "name": {
          "type": "string",
          "description": "The name of the Request"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "owner": {
          "description": "The employee who owns the Request",
          "$ref": "#/definitions/Employee"
        },
        "pendingApproval": {
          "type": "boolean"
        },
        "policy": {
          "description": "The policy that applies to the Request",
          "$ref": "#/definitions/ResourceLink"
        },
        "requestId": {
          "type": "string",
          "description": "The public key of the Request (unique per customer)"
        },
        "startDate": {
          "type": "string",
          "description": "The start date of the Request (in the format YYYY-MM-DD)"
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the Request (in the format HH:MM)"
        },
        "submitDate": {
          "type": "string",
          "description": "The date the Request was submitted (last submit date in case of recall)"
        },
        "totalApprovedAmount": {
          "description": "The total amount of approved expenses in the Request, expressed in the reimbursement currency of the employee at the time he created the request",
          "$ref": "#/definitions/Amount"
        },
        "totalPostedAmount": {
          "description": "The total amount of the Request, expressed in the reimbursement currency of the employee at the time he created the request",
          "$ref": "#/definitions/Amount"
        },
        "totalRemainingAmount": {
          "description": "The total amount not included in an Expense report, expressed in the reimbursement currency of the employee at the time he created the request",
          "$ref": "#/definitions/Amount"
        },
        "travelAgency": {
          "description": "The travel agency office that is managing the trip associated to this request",
          "$ref": "#/definitions/ResourceLink"
        },
        "type": {
          "description": "The type of the Request, inherited from the Request Policy Type",
          "$ref": "#/definitions/RequestType"
        }
      }
    },
    "RequestKey": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "string",
          "description": "The unique company identifier of the customer"
        },
        "entityId": {
          "type": "string",
          "description": "The entity code of the customer"
        },
        "internalCompanyId": {
          "type": "integer",
          "format": "int32",
          "description": "The internal company identifier of the customer"
        },
        "requestId": {
          "type": "string",
          "description": "The public key of the Request (unique per customer)"
        }
      }
    },
    "RequestLink": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "The public id of the Request"
        }
      }
    },
    "RequestType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code of the type inherited from the Request Policy type"
        },
        "label": {
          "type": "string",
          "description": "The label of the type inherited from the Request Policy Type"
        }
      }
    },
    "ResourceLink": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "template": {
          "type": "string"
        }
      }
    },
    "ResourceOfExpense": {
      "type": "object",
      "required": [
        "transactionDate"
      ],
      "properties": {
        "allocations": {
          "type": "array",
          "description": "List of the allocations composing this segment",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        },
        "approvedAmount": {
          "description": "The approved amount of the expense entry",
          "$ref": "#/definitions/Amount"
        },
        "budgetAccrualDate": {
          "type": "string",
          "example": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        },
        "businessPurpose": {
          "type": "string",
          "description": "The purpose of the Request entry"
        },
        "comments": {
          "description": "Historical comments to the Expense",
          "$ref": "#/definitions/ResourceLink"
        },
        "custom1": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom10": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom11": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom12": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom13": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom14": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom15": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom16": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom17": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom18": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom19": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom2": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom20": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom21": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom22": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom23": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom24": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom25": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom26": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom27": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom28": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom29": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom3": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom30": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom31": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom32": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom33": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom34": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom35": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom36": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom37": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom38": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom39": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom4": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom40": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom5": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom6": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom7": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom8": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom9": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "exchangeRate": {
          "description": "The exchange rate that applies to the entry",
          "$ref": "#/definitions/ExchangeRate"
        },
        "expenseType": {
          "description": "The expense type of the entry",
          "$ref": "#/definitions/ExpenseType"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the entry"
        },
        "lastComment": {
          "type": "string",
          "description": "The last comment of the entry"
        },
        "lastModifiedDate": {
          "type": "string",
          "description": "The date when this expense was last modified"
        },
        "location": {
          "description": "The location of the expense entry",
          "$ref": "#/definitions/Location"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "orgUnit1": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit2": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit3": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit4": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit5": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "orgUnit6": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "postedAmount": {
          "description": "The posted amount of the expense entry",
          "$ref": "#/definitions/Amount"
        },
        "remainingAmount": {
          "description": "The remaining amount of the expense entry",
          "$ref": "#/definitions/Amount"
        },
        "source": {
          "type": "string",
          "description": "The source that created the expense. It can be CASH_ADVANCE or TRAVEL_ALLOWANCE. This field will be empty in any other case.",
          "enum": [
            "CASH_ADVANCE",
            "TRAVEL_ALLOWANCE",
            "AGENCY_FEE"
          ]
        },
        "transactionAmount": {
          "description": "The amount of the expense entry, in the transaction currency paid to the vendor",
          "$ref": "#/definitions/Amount"
        },
        "transactionDate": {
          "type": "string",
          "description": "The date of the transaction"
        },
        "travelAllowance": {
          "description": "The Travel allowance",
          "$ref": "#/definitions/TravelAllowance"
        },
        "tripData": {
          "description": "This property is non empty if this expense represents a travel segment (AIR, CAR, HOTEL, ...)",
          "$ref": "#/definitions/TripData"
        },
        "vendor": {
          "description": "The vendor of the expense entry",
          "$ref": "#/definitions/Vendor"
        }
      }
    },
    "ResourceOfPolicy": {
      "type": "object",
      "properties": {
        "autoCreateReportConfig": {
          "type": "string",
          "description": "The report creation automation mode (ex: on the request start date",
          "enum": [
            "ON_REQUEST_START_DATE",
            "NONE"
          ]
        },
        "dataRetentionPolicyId": {
          "type": "string",
          "description": "Unique Identifier of Data Retention policy"
        },
        "enablePostApprovalTripUpdate": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether Post Approval Trip Updates are enabled for the Request policy"
        },
        "enableRequestEntriesToER": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether the copy of the Request Entries feature, to an existing Report, is enabled"
        },
        "expensePolicy": {
          "description": "The expense policy that applies to the Request policy",
          "$ref": "#/definitions/ResourceLink"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the Request policy",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "name": {
          "type": "string",
          "description": "Name of the Request policy",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "passiveApprovalAction": {
          "type": "string",
          "description": "Passive Approval action",
          "enum": [
            "APPROVED",
            "CANCELED",
            "NOT_SUBMITTED",
            "PENDING_BOOKING",
            "SENTBACK",
            "SUBMITTED"
          ]
        },
        "passiveApprovalDelayAfterSubmit": {
          "type": "integer",
          "format": "int32",
          "description": "Passive Approval delay after submit"
        },
        "passiveApprovalDelayBeforeApprovalLimit": {
          "type": "integer",
          "format": "int32",
          "description": "Passive Approval delay before ApprovalLimitDate"
        }
      }
    },
    "ResourceOfRequest": {
      "type": "object",
      "properties": {
        "approvalLimitDate": {
          "type": "string",
          "description": "The date by which the Request must be approved. This element appears only when integrated with Concur Travel"
        },
        "approvalStatus": {
          "description": "The approval status of the Request",
          "$ref": "#/definitions/ApprovalStatus"
        },
        "approved": {
          "type": "boolean"
        },
        "approver": {
          "description": "The approver of this request. Null when request is in an approvalStatus different from SUBMITTED",
          "$ref": "#/definitions/Employee"
        },
        "authorizedDate": {
          "type": "string",
          "description": "The date the Request was authorized"
        },
        "businessPurpose": {
          "type": "string",
          "description": "The businessPurpose of the Request"
        },
        "canceledPostApproval": {
          "type": "boolean"
        },
        "closed": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether the Request is closed"
        },
        "comment": {
          "type": "string",
          "description": "The last comment attached to this Request"
        },
        "comments": {
          "description": "Historical comments header to the Request",
          "$ref": "#/definitions/ResourceLink"
        },
        "creationDate": {
          "type": "string",
          "description": "For approved request, the date at which the approval process was completed"
        },
        "custom1": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom10": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom11": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom12": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom13": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom14": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom15": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom16": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom17": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom18": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom19": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom2": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom20": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom3": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom4": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom5": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom6": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom7": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom8": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom9": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "endDate": {
          "type": "string",
          "description": "The end date of the Request (in the format YYYY-MM-DD)"
        },
        "endTime": {
          "type": "string",
          "description": "The start time of the Request (in the format HH:MM)"
        },
        "everSentBack": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether the Request has ever been sent back to the employee"
        },
        "expensePolicy": {
          "description": "The expense policy that applies to the Request",
          "$ref": "#/definitions/ResourceLink"
        },
        "expenses": {
          "type": "array",
          "description": "Expected expenses attached to this Request",
          "items": {
            "$ref": "#/definitions/ResourceLink"
          }
        },
        "extensionOf": {
          "description": "The Request that this Request is an extension of, or adendum to",
          "$ref": "#/definitions/RequestLink"
        },
        "highestExceptionLevel": {
          "type": "string",
          "description": "The highest level of exception contained in this request. One of { NONE, WARNING, ERROR }",
          "enum": [
            "NONE",
            "WARNING",
            "ERROR"
          ]
        },
        "href": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the Request"
        },
        "lastModified": {
          "type": "string",
          "description": "The date the Request was last modified"
        },
        "mainDestination": {
          "description": "The main destination of the Request",
          "$ref": "#/definitions/Location"
        },
        "name": {
          "type": "string",
          "description": "The name of the Request"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "owner": {
          "description": "The employee who owns the Request",
          "$ref": "#/definitions/Employee"
        },
        "pendingApproval": {
          "type": "boolean"
        },
        "policy": {
          "description": "The policy that applies to the Request",
          "$ref": "#/definitions/ResourceLink"
        },
        "requestId": {
          "type": "string",
          "description": "The public key of the Request (unique per customer)"
        },
        "startDate": {
          "type": "string",
          "description": "The start date of the Request (in the format YYYY-MM-DD)"
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the Request (in the format HH:MM)"
        },
        "submitDate": {
          "type": "string",
          "description": "The date the Request was submitted (last submit date in case of recall)"
        },
        "totalApprovedAmount": {
          "description": "The total amount of approved expenses in the Request, expressed in the reimbursement currency of the employee at the time he created the request",
          "$ref": "#/definitions/Amount"
        },
        "totalPostedAmount": {
          "description": "The total amount of the Request, expressed in the reimbursement currency of the employee at the time he created the request",
          "$ref": "#/definitions/Amount"
        },
        "totalRemainingAmount": {
          "description": "The total amount not included in an Expense report, expressed in the reimbursement currency of the employee at the time he created the request",
          "$ref": "#/definitions/Amount"
        },
        "travelAgency": {
          "description": "The travel agency office that is managing the trip associated to this request",
          "$ref": "#/definitions/ResourceLink"
        },
        "type": {
          "description": "The type of the Request, inherited from the Request Policy Type",
          "$ref": "#/definitions/RequestType"
        }
      }
    },
    "ResourceOfTravelAgency": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string",
          "description": "The travel agency email address"
        },
        "id": {
          "type": "string",
          "description": "The travel agency unique identifier",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "name": {
          "type": "string",
          "description": "The travel agency office name",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "proposalType": {
          "type": "string",
          "description": "The travel agency proposal type",
          "enum": [
            "CWT",
            "CWTF",
            "AEBT",
            "API",
            "NONE"
          ]
        }
      }
    },
    "RuleViolation": {
      "type": "object",
      "properties": {
        "ruleAction": {
          "type": "integer",
          "format": "int32"
        },
        "ruleTemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "ruleValueId": {
          "type": "integer",
          "format": "int32"
        },
        "vendorCode": {
          "type": "string"
        },
        "vendorName": {
          "type": "string"
        }
      }
    },
    "Segment": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "endCity": {
          "type": "string"
        },
        "endCityCode": {
          "type": "string"
        },
        "endCountry": {
          "type": "string"
        },
        "endDateLocal": {
          "type": "string",
          "format": "date-time"
        },
        "endDateUTCFromLocation": {
          "$ref": "#/definitions/LocationView"
        },
        "endDateUtc": {
          "type": "string",
          "format": "date-time"
        },
        "endLatitude": {
          "type": "number"
        },
        "endLocationData": {
          "$ref": "#/definitions/LocationView"
        },
        "endLongitude": {
          "type": "number"
        },
        "endState": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "ruleViolations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleViolation"
          }
        },
        "segmentLocator": {
          "type": "integer",
          "format": "int64"
        },
        "startCity": {
          "type": "string"
        },
        "startCityCode": {
          "type": "string"
        },
        "startCountry": {
          "type": "string"
        },
        "startDateLocal": {
          "type": "string",
          "format": "date-time"
        },
        "startDateUTCFromLocation": {
          "$ref": "#/definitions/LocationView"
        },
        "startDateUtc": {
          "type": "string",
          "format": "date-time"
        },
        "startLatitude": {
          "type": "number"
        },
        "startLocationData": {
          "$ref": "#/definitions/LocationView"
        },
        "startLongitude": {
          "type": "number"
        },
        "startState": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        },
        "totalAmount": {
          "type": "number"
        }
      }
    },
    "SegmentLeg": {
      "type": "object",
      "properties": {
        "class": {
          "description": "The class of the segment leg.",
          "$ref": "#/definitions/ListItemField"
        },
        "classOfService": {
          "type": "string",
          "description": "The class of service of the segment leg. For example, in the case of an air segment, this field would contain the one-letter booking code: Y for economy class, or F for first class..."
        },
        "comment": {
          "type": "string",
          "description": "A comment for this segment leg"
        },
        "custom1": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom10": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom11": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom12": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom13": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom14": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom15": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom16": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom17": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom18": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom19": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom2": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom20": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom21": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom22": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom23": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom24": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom25": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom26": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom27": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom28": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom29": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom3": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom30": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom31": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom32": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom33": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom34": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom35": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom36": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom37": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom38": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom39": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom4": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom40": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom5": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom6": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom7": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom8": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "custom9": {
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration",
          "$ref": "#/definitions/CustomField"
        },
        "endDate": {
          "type": "string",
          "description": "The end date of the segment leg (in the format YYYY-MM-DD).It represents the arrival date of AIRFR and TRAIN segments, check out date for HOTEL or drop off for CARRT"
        },
        "endLocation": {
          "description": "The end location of the segment leg",
          "$ref": "#/definitions/Location"
        },
        "endLocationDetail": {
          "type": "string",
          "description": "Additional details about the end location. It is used for HOTEL and CARRT segments."
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the segment leg (in the format HH:MM). It is expressed in the local time of the endLocation"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the segment leg"
        },
        "returnLeg": {
          "type": "boolean",
          "example": false,
          "description": "This value indicates if the leg is a return leg or not."
        },
        "segmentLocator": {
          "type": "string",
          "description": "The segment locator"
        },
        "startDate": {
          "type": "string",
          "description": "The start date of the segment leg (in the format YYYY-MM-DD).It represents the departure date of AIRFR and TRAIN segments, check in date for HOTEL or pickup for CARRT"
        },
        "startLocation": {
          "description": "The start location of the segment leg (for HOTEL, this is empty)",
          "$ref": "#/definitions/Location"
        },
        "startLocationDetail": {
          "type": "string",
          "description": "Additional details about the start location. It is used for HOTEL and CARRT segments."
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the segment leg (in the format HH:MM). It is expressed in the local time of the startLocation\""
        },
        "vendorName": {
          "type": "string",
          "description": "The name of the vendor of this segment leg."
        }
      }
    },
    "SegmentType": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "The category of the segment type",
          "enum": [
            "REQ_SEG_AIRFR",
            "REQ_SEG_CARRT",
            "REQ_SEG_HOTEL",
            "REQ_SEG_LIMOF",
            "REQ_SEG_RAILF",
            "REQ_SEG_TAXIF",
            "REQ_SEG_MISC",
            "REQ_SEG_PARKG",
            "REQ_SEG_DININ",
            "REQ_SEG_EVENT"
          ]
        },
        "code": {
          "type": "string",
          "description": "The code of the segment type. This will most frequently be a String, but could also be an integer in the case of a custom expense typeFor example, would be REQ_SEG_AIRFR / AIRFR for a regular air segment, but REQ_SEG_AIRFR / 10325 for a custom air segment."
        }
      }
    },
    "SelectArProposalAction": {
      "type": "object",
      "properties": {
        "proposalOrder": {
          "type": "integer",
          "format": "int32"
        },
        "providerMessageId": {
          "type": "string"
        }
      }
    },
    "SettingLog": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string"
        },
        "settingName": {
          "type": "string"
        },
        "settingType": {
          "type": "string",
          "enum": [
            "REQ_ADMIN",
            "TECH_SUPPORT_ADMIN"
          ]
        },
        "settingValue": {
          "type": "string"
        },
        "timeStamp": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/Employee"
        }
      }
    },
    "TemporalUnit": {
      "type": "object",
      "properties": {
        "dateBased": {
          "type": "boolean"
        },
        "duration": {
          "$ref": "#/definitions/Duration"
        },
        "durationEstimated": {
          "type": "boolean"
        },
        "timeBased": {
          "type": "boolean"
        }
      }
    },
    "TravelAgency": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string",
          "description": "The travel agency email address"
        },
        "id": {
          "type": "string",
          "description": "The travel agency unique identifier",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "name": {
          "type": "string",
          "description": "The travel agency office name",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "proposalType": {
          "type": "string",
          "description": "The travel agency proposal type",
          "enum": [
            "CWT",
            "CWTF",
            "AEBT",
            "API",
            "NONE"
          ]
        }
      }
    },
    "TravelAllowance": {
      "type": "object",
      "properties": {
        "dailyTravelAllowanceId": {
          "type": "string",
          "description": "The fixed daily travel allowance id associated with the expense"
        }
      }
    },
    "TripData": {
      "type": "object",
      "required": [
        "legs",
        "segmentType"
      ],
      "properties": {
        "agencyBooked": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether this trip has been booked by a travel agency or not. Possible values are 'Y' if yes or 'N' otherwise"
        },
        "legs": {
          "type": "array",
          "description": "List of the legs composing this segment",
          "items": {
            "$ref": "#/definitions/SegmentLeg"
          }
        },
        "segmentType": {
          "description": "The type of the segment",
          "$ref": "#/definitions/SegmentType"
        },
        "selfBooked": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether this trip has been booked by the employee himself or not. Possible values are 'Y' if yes or 'N' otherwise"
        },
        "tripType": {
          "type": "string",
          "description": "Indicates the type of this trip. Possible values are: ONE_WAY, ROUND_TRIP, MULTI_STOPS",
          "enum": [
            "ONE_WAY",
            "ROUND_TRIP",
            "MULTI_STOPS"
          ]
        }
      }
    },
    "TripTotal": {
      "type": "object",
      "properties": {
        "currencyAmount": {
          "$ref": "#/definitions/CurrencyAmount"
        }
      }
    },
    "Vendor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The vendor identifier of the entry"
        },
        "name": {
          "type": "string",
          "description": "The vendor description of the entry"
        }
      }
    },
    "WorkflowAction": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "fromApprovalFlow": {
          "type": "boolean"
        }
      }
    },
    "XmlRequestOfImportItinProposalAction": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/BodyOfImportItinProposalAction"
        },
        "header": {
          "$ref": "#/definitions/Header"
        }
      }
    },
    "ZoneId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "rules": {
          "$ref": "#/definitions/ZoneRules"
        }
      }
    },
    "ZoneOffset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "rules": {
          "$ref": "#/definitions/ZoneRules"
        },
        "totalSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ZoneOffsetTransition": {
      "type": "object",
      "properties": {
        "dateTimeAfter": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeBefore": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "$ref": "#/definitions/Duration"
        },
        "gap": {
          "type": "boolean"
        },
        "instant": {
          "type": "string",
          "format": "date-time"
        },
        "offsetAfter": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "offsetBefore": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "overlap": {
          "type": "boolean"
        }
      }
    },
    "ZoneOffsetTransitionRule": {
      "type": "object",
      "properties": {
        "dayOfMonthIndicator": {
          "type": "integer",
          "format": "int32"
        },
        "dayOfWeek": {
          "type": "string",
          "enum": [
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "localTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "midnightEndOfDay": {
          "type": "boolean"
        },
        "month": {
          "type": "string",
          "enum": [
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ]
        },
        "offsetAfter": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "offsetBefore": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "standardOffset": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "timeDefinition": {
          "type": "string",
          "enum": [
            "UTC",
            "WALL",
            "STANDARD"
          ]
        }
      }
    },
    "ZoneRules": {
      "type": "object",
      "properties": {
        "fixedOffset": {
          "type": "boolean"
        },
        "transitionRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneOffsetTransitionRule"
          }
        },
        "transitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneOffsetTransition"
          }
        }
      }
    }
  }
}
